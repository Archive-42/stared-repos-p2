CTC 8.1 Triple Step:
A child is running up a staircase with n steps and can hop either 1 step, 2 steps, or 3 steps at a time.
Implement a method to count how many possible ways the child can run up the stairs.

0 Step => 1
1: (none)

1 Step => 1
1: 1

2 Steps => 2
1: 1 + 1
2: 2

3 Steps => 4
1: 1 + 1 + 1
2: 1 + 2
3: 2 + 1
4: 3

4 Steps => 7
1: 1 + 1 + 1 + 1
2: 2 + 1 + 1
3: 1 + 2 + 1
4: 1 + 1 + 2
5: 2 + 2
6: 3 + 1
7; 1 + 3

5 Steps => 13
 1: 1 + 1 + 1 + 1 + 1
 2: 2 + 1 + 1 + 1
 3: 1 + 2 + 1 + 1
 4: 1 + 1 + 2 + 1
 5: 1 + 1 + 1 + 2
 6: 2 + 2 + 1
 7: 2 + 1 + 2
 8: 1 + 2 + 2
 9: 3 + 1 + 1
10: 1 + 3 + 1
11: 1 + 1 + 3
12: 2 + 3
13: 3 + 2

1, 1, 2, 4, 7, 13

1 +  1 +  2 = 4
1 +  2 +  4 = 7
2 +  4 +  7 = 13
4 +  7 + 13 = 25

(n - 3) + (n - 2) + (n - 1)

function countWays(n) {
  if (n < 0) return 0
  if (n === 0) return 1
  return countWays(n - 1) + countWays(n - 2) + countWays(n - 3)
}