// Reboot
//
// Global resets to common HTML elements and more for easier usage by Bootstrap.
// Adds additional rules on top of Normalize.css, including several overrides.

// Reset the box-sizing
//
// Change from `box-sizing: content-box` to `border-box` so that when you add
// `padding` or `border`s to an element, the overall declared `width` does not
// change. For example, `width: 100px;` will always be `100px` despite the
// `border: 10px solid red;` and `padding: 20px;`.
//
// Heads up! This reset may cause conflicts with some third-party widgets. For
// recommendations on resolving such conflicts, see
// http://getbootstrap.com/getting-started/#third-box-sizing.
//
// Credit: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/

html {
    box-sizing: border-box;
    overflow-y: scroll;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

// Make viewport responsive
//
// @viewport is needed because IE 10+ doesn't honor <meta name="viewport"> in
// some cases. See http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/.
// Eventually @viewport will replace <meta name="viewport">. It's been manually
// prefixed for forward-compatibility.
//
// However, `device-width` is broken on IE 10 on Windows (Phone) 8,
// (see http://timkadlec.com/2013/01/windows-phone-8-and-device-width/ and https://github.com/twbs/bootstrap/issues/10497)
// and the fix for that involves a snippet of JavaScript to sniff the user agent
// and apply some conditional CSS.
//
// See http://getbootstrap.com/getting-started/#support-ie10-width for the relevant hack.
//
// Wrap `@viewport` with `@at-root` for when folks do a nested import (e.g.,
// `.class-name { @import "bootstrap"; }`).
//
// Includes future-proofed vendor prefixes as well.
@at-root {
    @-moz-viewport {
        width: device-width;
    }
    @-ms-viewport {
        width: device-width;
    }
    @-o-viewport {
        width: device-width;
    }
    @-webkit-viewport {
        width: device-width;
    }
    @viewport {
        width: device-width;
    }
}

//
// Reset HTML, body, and more
//

html {
    // Sets a specific default `font-size` for user with `rem` type scales.
    font-size: $font-size-root;
    // Changes the default tap highlight to be completely transparent in iOS.
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

body {
    // Make the `body` use the `font-size-root`
    font-family: $font-family-base;
    font-size: $font-size-base;
    line-height: $line-height;

    color: $text-color;
    color: var(--text-color, $text-color);
    background-color: $bg-color;

    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}

//
// Typography
//

// Remove top margins from headings
//
// By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
// margin for easier control within type scales as it avoids margin collapsing.

// Abbreviations and acronyms
abbr[title],
// Add data-* attribute to help out our tooltip plugin, per https://github.com/twbs/bootstrap/issues/5257
abbr[data-original-title] {
    cursor: help;
}

ol,
ul,
dl {
    padding: 0;
    margin: 0;
    list-style-type: none;
}

//
// Code
//

pre {
    margin: 0;
}

//
// Images
//

img {
    // By default, `<img>`s are `inline-block`. This assumes that, and vertically
    // centers them. This won't apply should you reset them to `block` level.
    vertical-align: middle;
    // Note: `<img>`s are deliberately not made responsive by default.
    // For the rationale behind this, see the comments on the `.img-fluid` class.
}

// iOS "clickable elements" fix for role="button"
//
// Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
// for traditionally non-focusable elements with role="button"
// see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

[role='button'] {
    cursor: pointer;
}

// Avoid 300ms click delay on touch devices that support the `touch-action` CSS property.
//
// In particular, unlike most other browsers, IE11+Edge on Windows 10 on touch devices and IE Mobile 10-11
// DON'T remove the click delay when `<meta name="viewport" content="width=device-width">` is present.
// However, they DO support removing the click delay via `touch-action: manipulation`.
// See:
// * http://v4-alpha.getbootstrap.com/content/reboot/#click-delay-optimization-for-touch
// * http://caniuse.com/#feat=css-touch-action
// * http://patrickhlauke.github.io/touch/tests/results/#suppressing-300ms-delay

a,
area,
button,
[role='button'],
input,
label,
select,
summary,
textarea {
    touch-action: manipulation;
}

//
// Tables
//

th {
    // Centered by default, but left-align-ed to match the `td`s below.
    text-align: left;
}

//
// Forms
//

label {
    // Allow labels to use `margin` for spacing.
    display: inline-block;
    margin: 0;
}

input,
button,
select,
textarea {
    // Remove all `margin`s so our classes don't have to do it themselves.
    margin: 0;
    // Normalize includes `font: inherit;`, so `font-family`. `font-size`, etc are
    // properly inherited. However, `line-height` isn't addressed there. Using this
    // ensures we don't need to unnecessarily redeclare the global font stack.
    line-height: inherit;
    // iOS adds rounded borders by default
    border-radius: 0;
}

textarea {
    // Textareas should really only resize vertically so they don't break their (horizontal) containers.
    resize: vertical;
}

fieldset {
    // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
    // so we reset that to ensure it behaves more like a standard block element.
    // See https://github.com/twbs/bootstrap/issues/12359.
    min-width: 0;
    padding: 0;
    margin: 0;
    border: 0;
}

legend {
    // Reset the entire legend element to match the `fieldset`
    display: block;
    width: 100%;
    padding: 0;
    margin-bottom: 0.5rem;
    font-size: 1.5rem;
    line-height: inherit;
    border: 0;
}

input[type='search'] {
    // Undo Normalize's default here to match our global overrides.
    box-sizing: inherit;
    // This overrides the extra rounded corners on search inputs in iOS so that our
    // `.form-control` class can properly style them. Note that this cannot simply
    // be added to `.form-control` as it's not specific enough. For details, see
    // https://github.com/twbs/bootstrap/issues/11586.
    -webkit-appearance: none;
}

::selection {
    background: $primary-color;
    background: var(--primary-color, $primary-color);
    color: #fff;
}
::-moz-selection {
    background: $primary-color;
    background: var(--primary-color, $primary-color);
    color: #fff;
}
