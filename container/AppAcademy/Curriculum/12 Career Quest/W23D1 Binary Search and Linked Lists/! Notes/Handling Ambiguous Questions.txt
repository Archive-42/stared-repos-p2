How to Handle Ambiguous Questions
If the question is knowledge-based and you don't know, don't hesitate to say "I don't know but...". Then give it your best guess.
Sometimes you don't know where to start because the question is very broad. Eg. "How would you design Amazon.com?" Split the problem into two equally large subproblems (Amazon: front end or back end?) and ask your interviewer which path to choose. You can do this a couple times, like a binary search.
During the job search you’ll often be in a position where you probably know the answer to the question being asked, but you’re unsure what exactly your interviewer is getting at. Most important here is not to panic. This isn’t a failure on your part. This situation is common to all job interviews, especially technical ones where concepts are more complex.

The difference between an experienced developer and a junior developer in these situations isn’t that the experienced one can divine what the interviewer is asking. Rather he/she will have the confidence to recognize that it’s the question that’s ambiguous, not him/her that’s ignorant. A junior developer is more at risk of shooting in the dark and coming off as if he/she doesn’t have the answer, when in fact he/she does.

Don’t get defensive when you get an ambiguous question. Engage. Try to understand what it is they’re asking. If it’s genuine, you won’t look like you’re fishing for hints.

Say you’re asked “What’s a GET request?”. You answer “GET is one of the standard verbs in HTTP”. They say “Sure, but what is a GET request?”. Now you’re confused. Ok, go through what you know about GET requests. Like all requests they’re strings. Does the interviewer want detail on how the string is structured? Does he/she want to know how it differs from other HTTP requests? Does he/she want to talk about what resources should be available to GET requests according to REST? These answers aren’t equally relevant, but since you’re there to show your interviewer how much you know about web development, you might as well bring them up.