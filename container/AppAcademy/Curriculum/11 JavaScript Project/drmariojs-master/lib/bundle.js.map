{"version":3,"sources":["webpack:///webpack/bootstrap cdcbe3fba067e32c6047","webpack:///./lib/audio.js","webpack:///./lib/drmariojs.js","webpack:///./lib/game.js","webpack:///./lib/pill.js","webpack:///./lib/virus.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;AC9EA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;ACVD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,oEAAoE,gBAAgB;AACpF,6DAA6D,WAAW;AACxE,6DAA6D,WAAW;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,wBAAwB,cAAc,EAAE;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oEAAoE,gBAAgB;AACpF,6DAA6D,WAAW;AACxE,6DAA6D,WAAW;AACxE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wBAAwB,gDAAgD;AACxE,KAAK;AACL,wBAAwB,gDAAgD;AACxE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAwB,gDAAgD;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;;AAEA,eAAe,4BAA4B;AAC3C,iBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4BAA4B;AAC3C;AACA;AACA,iBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;AClXA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA,KAAK;AACL,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA,KAAK;AACL,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA,KAAK;AACL,8BAA8B,WAAW;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8BAA8B,WAAW;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;ACnQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,WAAW;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cdcbe3fba067e32c6047","class Audio {\n\n  toggleMute() {\n    const sounds = document.getElementsByTagName(\"audio\");\n    for (let i = 0; i < sounds.length; i++) {\n      sounds[i].muted = !sounds[i].muted;\n    }\n    const muteButton = document.getElementById(\"muteicon\");\n    if (sounds[0].muted) {\n      muteButton.classList.remove(\"fa-volume-up\");\n      muteButton.classList.add(\"fa-volume-off\");\n    } else {\n      muteButton.classList.remove(\"fa-volume-off\");\n      muteButton.classList.add(\"fa-volume-up\");\n    }\n  }\n  startGame() {\n    const sounds = document.getElementsByTagName(\"audio\");\n    for (let i = 0; i < sounds.length; i++) {\n      sounds[i].pause();\n      sounds.currentTime = 0;\n    }\n    const sound = document.getElementById(\"bgm\");\n    sound.play();\n  }\n\n  bgmStop() {\n    const sound = document.getElementById(\"bgm\");\n    sound.pause();\n    sound.currentTime = 0;\n  }\n\n  pausebgm() {\n    const sound = document.getElementById(\"bgm\");\n    sound.pause();\n  }\n\n  playbgm() {\n    const sound = document.getElementById(\"bgm\");\n    sound.play();\n  }\n\n  movePill() {\n    const sound = document.getElementById(\"movepill\");\n    sound.currentTime = 0;\n    sound.play();\n  }\n\n  rotatePill() {\n    const sound = document.getElementById(\"rotatepill\");\n    sound.currentTime = 0;\n    sound.play();\n  }\n\n  eatBlocks() {\n    const sound = document.getElementById(\"eatblocks\");\n    sound.currentTime = 0;\n    sound.play();\n  }\n\n  levelClear() {\n    const bgm = document.getElementById(\"bgm\");\n    const sound = document.getElementById(\"levelclear\");\n    bgm.pause();\n    bgm.currentTime = 0;\n    sound.play();\n    setTimeout(() => {\n      bgm.play();\n    }, 2500);\n  }\n\n  gameOver() {\n    const sound = document.getElementById(\"gameover\");\n    sound.play();\n  }\n\n}\n\nexport default Audio;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/audio.js\n// module id = 0\n// module chunks = 0","import Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n  const ctx = canvasEl.getContext(\"2d\");\n\n  let game = new Game(ctx);\n  game.start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/drmariojs.js\n// module id = 1\n// module chunks = 0","import Pill from './pill';\nimport Virus from './virus';\nimport Audio from './audio';\n\nclass Game {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.level = 1;\n    this.speed = 1000;\n    this.score = 0;\n    this.newGame = true;\n    this.gameOver = false;\n    this.paused = false;\n    this.checking = false;\n    this.changed = false;\n    this.currentPill = null;\n    this.virusCount = 0;\n    this.board = this.newBoard(ctx);\n    this.audio = new Audio;\n  }\n\n  newBoard(ctx) {\n    const board = new Array(16);\n    for (let i = 0; i < board.length; i++) {\n      board[i] = new Array(8);\n    }\n    this.randomizeViruses(ctx, board);\n    return board;\n  }\n\n  randomizeViruses(ctx, board) {\n    for (let i = 0; i < this.level * 10; i++) {\n      let randomX = Math.floor(Math.random() * 8);\n      let randomY = Math.floor(Math.random() * 12) + 4;\n      while (board[randomY][randomX] !== undefined) {\n        randomX = Math.floor(Math.random() * 8);\n        randomY = Math.floor(Math.random() * 12) + 4;\n      }\n      const virusColor = [\"yellow\", \"blue\", \"red\"][Math.floor(Math.random() * 3)];\n      const virus = new Virus(ctx, board, [randomY, randomX], virusColor);\n      board[randomY][randomX] = virus;\n    }\n  }\n\n  newPill(ctx, board) {\n    if (this.board[0][3] !== undefined || this.board[0][4] !== undefined) {\n      this.gameOver = true;\n    }\n    const pill = new Pill(ctx, board);\n    this.currentPill = pill;\n    board[0][3] = pill.pill1;\n    board[0][4] = pill.pill2;\n  }\n\n  allObjects() {\n    return [].concat.apply([], this.board);\n  }\n\n  draw(ctx) {\n    if (!this.paused && !this.gameOver) {\n      ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n      this.allObjects().forEach((object) => {\n        if (object !== undefined) {\n          object.draw();\n        }\n      });\n      document.getElementById(\"virus\").innerHTML = `Viruses Left: ${this.virusCount}`;\n      document.getElementById(\"score\").innerHTML = `Score: ${this.score}`;\n      document.getElementById(\"level\").innerHTML = `Level: ${this.level}`;\n    }\n  }\n\n  bindKeyHandlers() {\n    Object.keys(Game.MOVES).forEach((k) => {\n      const move = Game.MOVES[k];\n      key(k, () => {\n        this.currentPill.move(k);\n        if (!this.currentPill.active) {\n          this.checkBoard();\n        }\n        this.draw(this.ctx);\n      });\n    });\n    key(\"space\", () => { this.space(); });\n  }\n\n  space() {\n    if (this.newGame) {\n      this.newGame = false;\n      this.checkBoard();\n      this.audio.startGame();\n      requestAnimationFrame(this.animate.bind(this));\n    } else if (!this.gameOver) {\n      this.paused = !this.paused;\n      this.currentPill.active = !this.currentPill.active;\n      if (this.paused) {\n        this.audio.pausebgm();\n      } else {\n        this.audio.playbgm();\n      }\n      this.ctx.font = \"60px Arial\";\n      this.ctx.fillStyle = \"red\";\n      this.ctx.fillText(\"PAUSED\",25,300);\n      this.ctx.strokeStyle = \"white\";\n      this.ctx.lineWidth = 2;\n      this.ctx.strokeText(\"PAUSED\",25,300);\n      this.draw(this.ctx);\n    } else {\n      this.level = 1;\n      this.speed = 1000;\n      this.score = 0;\n      this.gameOver = false;\n      this.board = this.newBoard(this.ctx);\n      this.checkBoard();\n      this.audio.startGame();\n      requestAnimationFrame(this.animate.bind(this));\n    }\n  }\n\n  start() {\n    this.bindKeyHandlers();\n    requestAnimationFrame(this.animate.bind(this));\n    this.checkBoard();\n  }\n\n  animate() {\n    if (this.newGame) {\n      document.getElementById(\"virus\").innerHTML = `Viruses Left: ${this.virusCount}`;\n      document.getElementById(\"score\").innerHTML = `Score: ${this.score}`;\n      document.getElementById(\"level\").innerHTML = `Level: ${this.level}`;\n      document.getElementById(\"mute\").addEventListener(\"click\", () => {\n        this.audio.toggleMute();\n        document.getElementById(\"mute\").blur();\n      });\n      this.ctx.font = \"50px Arial\";\n      this.ctx.fillStyle = \"red\";\n      this.ctx.fillText(\"Dr Mario JS\",15,250);\n      this.ctx.strokeStyle = \"white\";\n      this.ctx.lineWidth = 2;\n      this.ctx.strokeText(\"Dr Mario JS\",15,250);\n      this.ctx.font = \"25px Arial\";\n      this.ctx.fillStyle = \"red\";\n      this.ctx.fillText(\"Hit Space to Start\",45,300);\n      this.ctx.strokeStyle = \"white\";\n      this.ctx.lineWidth = 1;\n      this.ctx.strokeText(\"Hit Space to Start\",45,300);\n    } else if (this.paused) {\n      setTimeout(() => {requestAnimationFrame(this.animate.bind(this));}, this.speed);\n    } else if (this.checking){\n      setTimeout(() => {requestAnimationFrame(this.animate.bind(this));}, this.speed);\n    } else if (this.virusCount === 0) {\n      this.audio.levelClear();\n      if (this.level < 10) {\n        this.level += 1;\n        this.speed -= 100;\n      }\n      this.board = this.newBoard(this.ctx);\n      this.checkBoard();\n      requestAnimationFrame(this.animate.bind(this));\n    } else if (this.gameOver) {\n      this.audio.bgmStop();\n      this.audio.gameOver();\n      this.ctx.font = \"50px Arial\";\n      this.ctx.fillStyle = \"red\";\n      this.ctx.fillText(\"Game Over\",15,250);\n      this.ctx.strokeStyle = \"white\";\n      this.ctx.lineWidth = 2;\n      this.ctx.strokeText(\"Game Over\",15,250);\n      this.ctx.font = \"25px Arial\";\n      this.ctx.fillStyle = \"red\";\n      this.ctx.fillText(\"Hit Space to Restart\",30,300);\n      this.ctx.strokeStyle = \"white\";\n      this.ctx.lineWidth = 1;\n      this.ctx.strokeText(\"Hit Space to Restart\",30,300);\n    } else {\n      if (!this.currentPill || !this.currentPill.active) {\n        this.newPill(this.ctx, this.board);\n      } else {\n        this.currentPill.drop();\n        if (!this.currentPill.active) {\n          this.checkBoard();\n        }\n      }\n\n      this.draw(this.ctx);\n\n      setTimeout(() => {requestAnimationFrame(this.animate.bind(this));}, this.speed);\n    }\n  }\n\n  checkBoard() {\n    this.checking = true;\n    this.checkCols();\n    this.checkRows();\n    if (this.changed) {\n      this.changed = false;\n      this.dropPills();\n      setTimeout(() => {this.checkBoard();}, 500);\n    } else {\n      this.checking = false;\n    }\n  }\n\n  dropPills() {\n    const transposedBoard = [];\n    for (var i = 0; i < 8; i++) {\n      const newRow = [];\n      for (var j = 15; j >= 0; j--) {\n        newRow.push(this.board[j][i]);\n      }\n      transposedBoard.push(newRow);\n    }\n\n    for (i = 0; i < transposedBoard.length; i++) {\n      for (j = 1; j < transposedBoard[i].length; j++) {\n        if (transposedBoard[i][j] !== undefined &&\n          transposedBoard[i][j].type === \"pill\" &&\n          transposedBoard[i][j -1 ] === undefined) {\n            if (transposedBoard[i][j].pair === null) {\n              transposedBoard[i][j].drop();\n              transposedBoard[i][j] = undefined;\n              this.draw(this.ctx);\n              this.changed = true;\n            } else if (transposedBoard[i][j].coords[1] === transposedBoard[i][j].pair.coords[1] ||\n                transposedBoard[i][j].coords[0] !== transposedBoard[i][j].pair.coords[0] ||\n                this.board[transposedBoard[i][j].pair.coords[0] + 1][transposedBoard[i][j].pair.coords[1]] === undefined) {\n                  transposedBoard[i][j].drop();\n                  transposedBoard[i][j] = undefined;\n                  this.draw(this.ctx);\n                  this.changed = true;\n            }\n        }\n      }\n    }\n  }\n\n  checkRows() {\n    let viruses = [];\n    let tempRow;\n    let currentColor;\n    for (var i = 0; i < this.board.length; i++) {\n      tempRow = [];\n      currentColor = null;\n      for (var j = 0; j < this.board[i].length; j++) {\n        if (this.board[i][j] !== undefined) {\n          if (this.board[i][j].type === \"virus\") {\n            viruses.push([i, j]);\n          }\n          if (currentColor === null) {\n            currentColor = this.board[i][j].color;\n          }\n          if (this.board[i][j].color === currentColor) {\n            tempRow.push([i, j]);\n          }\n          if (this.board[i][j].color !== currentColor || j === 7) {\n            currentColor = this.board[i][j].color;\n            if (tempRow.length > 3) {\n              tempRow.forEach((coord) => {\n                if (this.board[coord[0]][coord[1]].type === \"virus\") {\n                  this.score += 100;\n                }\n                if (this.board[coord[0]][coord[1]].pair) {\n                  this.board[coord[0]][coord[1]].pair.pair = null;\n                }\n                this.board[coord[0]][coord[1]] = undefined;\n                this.changed = true;\n              });\n              this.audio.eatBlocks();\n            }\n            tempRow = [];\n            tempRow.push([i, j]);\n          }\n        } else {\n          if (tempRow.length > 3) {\n            tempRow.forEach((coord) => {\n              if (this.board[coord[0]][coord[1]].type === \"virus\") {\n                this.score += 100;\n              }\n              if (this.board[coord[0]][coord[1]].pair) {\n                this.board[coord[0]][coord[1]].pair.pair = null;\n              }\n              this.board[coord[0]][coord[1]] = undefined;\n              this.changed = true;\n            });\n            this.audio.eatBlocks();\n          }\n          tempRow = [];\n          currentColor = null;\n        }\n      }\n    }\n    this.virusCount = viruses.length;\n  }\n\n  checkCols() {\n    const transposedBoard = [];\n    for (var i = 0; i < 8; i++) {\n      const newRow = [];\n      for (var j = 0; j < this.board.length; j++) {\n        newRow.push(this.board[j][i]);\n      }\n      transposedBoard.push(newRow);\n    }\n    let tempCol = [];\n    let currentColor = null;\n    for (i = 0; i < transposedBoard.length; i++) {\n      tempCol = [];\n      currentColor = null;\n      for (j = 0; j < transposedBoard[i].length; j++) {\n        if (transposedBoard[i][j] !== undefined) {\n          if (currentColor === null) {\n            currentColor = transposedBoard[i][j].color;\n          }\n          if (transposedBoard[i][j].color === currentColor) {\n            tempCol.push([i, j]);\n          }\n          if (transposedBoard[i][j].color !== currentColor || j === 15) {\n            currentColor = transposedBoard[i][j].color;\n            if (tempCol.length > 3) {\n              tempCol.forEach((coord) => {\n                if (this.board[coord[1]][coord[0]].type === \"virus\") {\n                  this.score += 100;\n                }\n                if (this.board[coord[1]][coord[0]].pair) {\n                  this.board[coord[1]][coord[0]].pair.pair = null;\n                }\n                this.board[coord[1]][coord[0]] = undefined;\n                this.changed = true;\n              });\n              this.audio.eatBlocks();\n            }\n            tempCol = [];\n            tempCol.push([i, j]);\n          }\n        } else {\n          if (tempCol.length > 3) {\n            tempCol.forEach((coord) => {\n              if (this.board[coord[1]][coord[0]].type === \"virus\") {\n                this.score += 100;\n              }\n              if (this.board[coord[1]][coord[0]].pair) {\n                this.board[coord[1]][coord[0]].pair.pair = null;\n              }\n              this.board[coord[1]][coord[0]] = undefined;\n              this.changed = true;\n            });\n            this.audio.eatBlocks();\n          }\n          tempCol = [];\n          currentColor = null;\n        }\n      }\n    }\n  }\n\n\n\n}\n\nGame.DIM_X = 288;\nGame.DIM_Y = 576;\nGame.MOVES = {\n  left: \"left\",\n  right: \"right\",\n  down: \"down\",\n  z: \"z\",\n  x: \"x\",\n};\n\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 2\n// module chunks = 0","import Audio from './audio';\n\nclass Pill {\n  constructor(ctx, board) {\n    this.ctx = ctx;\n    this.board = board;\n    this.board1 = [0, 3];\n    this.board2 = [0, 4];\n    this.active = true;\n    this.horizontal = true;\n    this.audio = new Audio;\n\n    this.pill1 = new PillBlock(ctx, board, [0, 3], [\"yellow\", \"blue\", \"red\"][Math.floor(Math.random() * 3)], \"left\");\n    this.pill2 = new PillBlock(ctx, board, [0, 4], [\"yellow\", \"blue\", \"red\"][Math.floor(Math.random() * 3)], \"right\");\n    this.pill1.pair = this.pill2;\n    this.pill2.pair = this.pill1;\n  }\n\n  drop() {\n    if (\n      this.board1[0] < 15 &&\n      this.board2[0] < 15 &&\n      (this.board[this.board1[0] + 1][this.board1[1]] === undefined || this.board1[0] + 1 === this.board2[0] ) &&\n      (this.board[this.board2[0] + 1][this.board2[1]] === undefined || this.board2[0] + 1=== this.board1[0] )\n    ) {\n\n        this.board[this.board1[0]][this.board1[1]] = undefined;\n        this.board[this.board2[0]][this.board2[1]] = undefined;\n\n        this.board1[0] = this.board1[0] + 1;\n        this.board2[0] = this.board2[0] + 1;\n\n        this.board[this.board1[0]][this.board1[1]] = this.pill1;\n        this.board[this.board2[0]][this.board2[1]] = this.pill2;\n\n        this.pill1.coords = [this.board1[0], this.board1[1]];\n        this.pill2.coords = [this.board2[0], this.board2[1]];\n    } else {\n      this.active = false;\n    }\n  }\n\n  move(k) {\n    if (this.active) {\n      if (k === \"down\") {\n        this.drop();\n        this.audio.movePill();\n      }\n      if (k === \"right\") {\n        if (\n          this.board1[1] < 7 &&\n          this.board2[1] < 7 &&\n          (this.board[this.board1[0]][this.board1[1] + 1] === undefined || this.board1[1] + 1 == this.board2[1]) &&\n          (this.board[this.board2[0]][this.board2[1] + 1] === undefined || this.board2[1] + 1 == this.board1[1])\n          ) {\n            this.board[this.board1[0]][this.board1[1]] = undefined;\n            this.board[this.board2[0]][this.board2[1]] = undefined;\n\n            this.board1[1] = this.board1[1] + 1;\n            this.board2[1] = this.board2[1] + 1;\n\n            this.board[this.board1[0]][this.board1[1]] = this.pill1;\n            this.board[this.board2[0]][this.board2[1]] = this.pill2;\n\n            this.pill1.coords = [this.board1[0], this.board1[1]];\n            this.pill2.coords = [this.board2[0], this.board2[1]];\n\n            this.audio.movePill();\n          }\n        }\n        if (k === \"left\") {\n          if (\n            this.board1[1] > 0 &&\n            this.board2[1] > 0 &&\n            (this.board[this.board1[0]][this.board1[1] - 1] === undefined || this.board1[1] - 1 == this.board2[1]) &&\n            (this.board[this.board2[0]][this.board2[1] - 1] === undefined || this.board2[1] - 1 == this.board1[1])\n            ) {\n\n              this.board[this.board1[0]][this.board1[1]] = undefined;\n              this.board[this.board2[0]][this.board2[1]] = undefined;\n\n              this.board1[1] = this.board1[1] - 1;\n              this.board2[1] = this.board2[1] - 1;\n\n              this.board[this.board1[0]][this.board1[1]] = this.pill1;\n              this.board[this.board2[0]][this.board2[1]] = this.pill2;\n\n              this.pill1.coords = [this.board1[0], this.board1[1]];\n              this.pill2.coords = [this.board2[0], this.board2[1]];\n\n              this.audio.movePill();\n            }\n          }\n        if (k === \"z\") {\n          if (this.horizontal) {\n            if (this.board2[0] > 0 && this.board[this.board1[0] - 1][this.board1[1]] === undefined) {\n\n              this.board[this.board2[0]][this.board2[1]] = undefined;\n              this.board2[0] = this.board2[0] - 1;\n              this.board2[1] = this.board2[1] - 1;\n              this.board[this.board2[0]][this.board2[1]] = this.pill2;\n              this.pill2.coords = [this.board2[0], this.board2[1]];\n\n              this.pill1.side = \"bottom\";\n              this.pill2.side = \"top\";\n\n              this.horizontal = false;\n\n              this.audio.rotatePill();\n            }\n          } else {\n            if (this.board[this.board1[0]][this.board1[1] + 1] === undefined && this.board1[1] < 7) {\n              this.board[this.board2[0]][this.board2[1]] = undefined;\n              this.board2[0] = this.board2[0] + 1;\n              this.board2[1] = this.board2[1] + 1;\n              this.board[this.board2[0]][this.board2[1]] = this.pill2;\n              this.pill2.coords = [this.board2[0], this.board2[1]];\n\n              const tempColor = this.pill1.color;\n              this.pill1.color = this.pill2.color;\n              this.pill2.color = tempColor;\n\n              this.pill1.side = \"left\";\n              this.pill2.side = \"right\";\n\n              this.horizontal = true;\n\n              this.audio.rotatePill();\n            }\n          }\n        }\n        if (k === \"x\") {\n          if (this.horizontal) {\n            if (this.board2[0] > 0 && this.board[this.board1[0] - 1][this.board1[1]] === undefined) {\n              this.board[this.board2[0]][this.board2[1]] = undefined;\n              this.board2[0] = this.board2[0] - 1;\n              this.board2[1] = this.board2[1] - 1;\n              this.board[this.board2[0]][this.board2[1]] = this.pill2;\n              this.pill2.coords = [this.board2[0], this.board2[1]];\n\n              const tempColor = this.pill1.color;\n              this.pill1.color = this.pill2.color;\n              this.pill2.color = tempColor;\n\n              this.pill1.side = \"bottom\";\n              this.pill2.side = \"top\";\n\n              this.horizontal = false;\n\n              this.audio.rotatePill();\n            }\n          } else {\n            if (this.board[this.board1[0]][this.board1[1] + 1] === undefined && this.board1[1] < 7) {\n              this.board[this.board2[0]][this.board2[1]] = undefined;\n              this.board2[0] = this.board2[0] + 1;\n              this.board2[1] = this.board2[1] + 1;\n              this.board[this.board2[0]][this.board2[1]] = this.pill2;\n              this.pill2.coords = [this.board2[0], this.board2[1]];\n\n              this.pill1.side = \"left\";\n              this.pill2.side = \"right\";\n\n              this.horizontal = true;\n\n              this.audio.rotatePill();\n            }\n          }\n        }\n    }\n\n  }\n}\n\nclass PillBlock {\n  constructor(ctx, board, coords, color, side){\n    this.ctx = ctx;\n    this.board = board;\n    this.coords = coords;\n    this.color = color;\n    this.type = \"pill\";\n    this.pair = null;\n    this.side = side;\n  }\n\n  draw() {\n    let img = new Image();\n    let x = (this.coords[1] * 36);\n    let y = (this.coords[0] * 36);\n    let w = 32;\n    let h = 32;\n    let degrees = -90;\n    if (this.pair === null) {\n      img.src = `images/pill${this.color}.png`;\n      this.ctx.drawImage(img, this.coords[1] * 36, this.coords[0] * 36, 32, 32);\n      img.onload = () => {\n        this.ctx.drawImage(img, this.coords[1] * 36, this.coords[0] * 36, 32, 32);\n      };\n    } else if (this.side === \"left\") {\n      img.src = `images/pill${this.color}left.png`;\n      this.ctx.drawImage(img, this.coords[1] * 36, this.coords[0] * 36, 32, 32);\n      img.onload = () => {\n        this.ctx.drawImage(img, this.coords[1] * 36, this.coords[0] * 36, 32, 32);\n      };\n    } else if (this.side === \"right\"){\n      img.src = `images/pill${this.color}right.png`;\n      this.ctx.drawImage(img, this.coords[1] * 36, this.coords[0] * 36, 32, 32);\n      img.onload = () => {\n        this.ctx.drawImage(img, this.coords[1] * 36, this.coords[0] * 36, 32, 32);\n      };\n    } else if (this.side === \"top\"){\n      img.src = `images/pill${this.color}right.png`;\n\n      this.ctx.save();\n      this.ctx.translate(x+w/2, y+h/2);\n      this.ctx.rotate(degrees*Math.PI/180.0);\n      this.ctx.translate(-x-w/2, -y-h/2);\n      this.ctx.drawImage(img, this.coords[1] * 36, this.coords[0] * 36, 32, 32);\n      this.ctx.restore();\n      img.onload = () => {\n        this.ctx.save();\n        this.ctx.translate(x+w/2, y+h/2);\n        this.ctx.rotate(degrees*Math.PI/180.0);\n        this.ctx.translate(-x-w/2, -y-h/2);\n        this.ctx.drawImage(img, this.coords[1] * 36, this.coords[0] * 36, 32, 32);\n        this.ctx.restore();\n      };\n    } else if (this.side === \"bottom\"){\n      img.src = `images/pill${this.color}left.png`;\n\n      this.ctx.save();\n      this.ctx.translate(x+w/2, y+h/2);\n      this.ctx.rotate(degrees*Math.PI/180.0);\n      this.ctx.translate(-x-w/2, -y-h/2);\n      this.ctx.drawImage(img, this.coords[1] * 36, this.coords[0] * 36, 32, 32);\n      this.ctx.restore();\n      img.onload = () => {\n        this.ctx.save();\n        this.ctx.translate(x+w/2, y+h/2);\n        this.ctx.rotate(degrees*Math.PI/180.0);\n        this.ctx.translate(-x-w/2, -y-h/2);\n        this.ctx.drawImage(img, this.coords[1] * 36, this.coords[0] * 36, 32, 32);\n        this.ctx.restore();\n      };\n    }\n  }\n\n  drop() {\n    if (\n      this.coords[0] < 15 &&\n      this.board[this.coords[0] + 1][this.coords[1]] === undefined\n    ) {\n        this.board[this.coords[0]][this.coords[1]] = undefined;\n        this.coords[0] = this.coords[0] + 1;\n        this.board[this.coords[0]][this.coords[1]] = this;\n    }\n  }\n}\n\n\nexport default Pill;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pill.js\n// module id = 3\n// module chunks = 0","class Virus {\n  constructor(ctx, board, coords, color){\n    this.ctx = ctx;\n    this.board = board;\n    this.coords = coords;\n    this.color = color;\n    this.type = \"virus\";\n    this.pair = null;\n  }\n\n  draw() {\n    this.board[this.coords[0]][this.coords[1]] = this;\n\n    let img = new Image();\n    img.src = `images/virus${this.color}.png`;\n    this.ctx.drawImage(img, this.coords[1] * 36, this.coords[0] * 36, 36, 36);\n    img.onload = () => {\n      this.ctx.drawImage(img, this.coords[1] * 36, this.coords[0] * 36, 36, 36);\n    };\n  }\n}\n\nexport default Virus;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/virus.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}